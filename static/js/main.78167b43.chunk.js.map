{"version":3,"sources":["components/DateInput/dateReducer.js","components/rootReducer.js","components/DateInput/index.js","components/DateInput/actions.js","components/DateInput/container.js","components/Launch/components/Payload/index.js","components/Launch/components/LaunchImage/index.js","components/Launch/index.js","components/Launch/container.js","components/Favorites/index.js","components/Favorites/container.js","components/Launches/index.js","components/Launches/container.js","App.js","serviceWorker.js","index.js"],"names":["ADD","defaultState","startDate","endDate","isFetching","launchesData","favoritesData","rootReducer","combineReducers","dateReducer","state","action","type","payload","start","end","favs","favIndex","indexOf","splice","DateInput","props","startChange","e","setState","target","value","endChange","Moment","format","this","getLaunches","className","htmlFor","id","onChange","max","min","onClick","preventDefault","React","Component","fetchLaunches","receieveLaunches","connect","dispatch","Axios","get","then","response","data","error","console","log","Payload","showPayloads","clickBool","payloadBool","payloadMap","payloads","map","index","key","payload_id","payload_type","undefined","nationality","LaunchImage","showImagesUpdate","showImages","imgBool","src","links","mission_patch","alt","flickr_images","length","img","Launch","descBool","mission_name","heart","removeFavorite","addFavorite","icon","faHeart","far","launch_date_utc","details","rocket","second_stage","fav","Favorites","launches","favorites","launch","includes","Launches","App","href","rel","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78167b43.chunk.js","sourcesContent":["\r\n\r\nconst DATE = \"CHANGE_DATES\";\r\nconst RECEIVE = \"RECEIVE_LAUNCHES\";\r\nconst ADD = \"ADD_FAVORITE\";\r\nconst REMOVE = \"REMOVE_FAVORITE\";\r\n\r\n//default state\r\nconst defaultState = {\r\n    startDate: null,\r\n    endDate: null,\r\n    isFetching: false,\r\n    launchesData: [],\r\n    favoritesData: []\r\n}\r\nexport const dateReducer = (state = defaultState, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case DATE:\r\n            const { start, end } = payload;\r\n            return {\r\n                ...state,\r\n                startDate: start,\r\n                endDate: end,\r\n                isFetching: true\r\n            }\r\n        case RECEIVE:\r\n            return {\r\n                ...state,\r\n                launchesData: payload,\r\n                isFetching: false\r\n            }\r\n        case ADD:\r\n            return {\r\n                ...state,\r\n                favoritesData: [...state.favoritesData, payload]\r\n            };\r\n        case REMOVE:\r\n            let favs = [...state.favoritesData]\r\n            let favIndex = favs.indexOf(payload);\r\n            favs.splice(favIndex, 1);\r\n            return {\r\n                ...state,\r\n                favoritesData: favs\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","//import React from 'react';\r\nimport { combineReducers } from 'redux';\r\nimport { dateReducer } from './DateInput/dateReducer';\r\n//import {} from 'react-redux';\r\n\r\nexport const rootReducer = combineReducers({dateReducer});","import React from 'react';\r\nimport Moment from 'moment';\r\nimport \"./styles.scss\";\r\n\r\nexport class DateInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            start: \"2002-05-06\",\r\n            end: Moment().format('YYYY-MM-DD'),\r\n        }\r\n    }\r\n\r\n    startChange = (e) => {\r\n        this.setState({\r\n            start: e.target.value\r\n        });\r\n    }\r\n    endChange = (e) => {\r\n        this.setState({\r\n            end: e.target.value\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        this.props.getLaunches(this.state.start, this.state.end);\r\n    }\r\n    render(){\r\n\r\n        return (\r\n            <form className=\"dateInput\">\r\n                <label htmlFor=\"startDate\" className=\"dateLabel\">Start Date:</label>\r\n                <input type=\"date\" id=\"startDate\"\r\n                    value={this.state.start}\r\n                    onChange={this.startChange}\r\n                    max={this.state.end}\r\n                />\r\n                <label htmlFor=\"endDate\" className=\"dateLabel\">End Date:</label>\r\n                <input type=\"date\" id=\"endDate\"\r\n                    value={this.state.end}\r\n                    onChange={this.endChange}\r\n                    min={this.state.start}\r\n                />\r\n                <button onClick={(e) => {\r\n                    e.preventDefault();\r\n                    this.props.getLaunches(this.state.start, this.state.end);\r\n                }\r\n                }\r\n                    className=\"dateSubmit\">Submit</button>\r\n            </form >\r\n        );\r\n    }\r\n}","import Axios from 'axios';\r\n\r\nexport const getLaunches = (start, end) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchLaunches({ start, end }));\r\n        return Axios.get('https://api.spacexdata.com/v3/launches/past?start=' + start + '&end=' + end)\r\n            .then(\r\n                (response) => {\r\n                    return response.data\r\n                },\r\n\r\n                (error) => (console.log(\"an error occurred\" + error))\r\n            )\r\n            .then((response) => {\r\n                return dispatch(receieveLaunches(response))\r\n            }\r\n            )\r\n    }\r\n\r\n}\r\n\r\nexport const fetchLaunches = (payload) => {\r\n    return {\r\n        type: \"CHANGE_DATES\",\r\n        payload\r\n    }\r\n}\r\nexport const receieveLaunches = (payload) => {\r\n    return {\r\n        type: \"RECEIVE_LAUNCHES\",\r\n        payload\r\n    }\r\n}\r\nexport const addFavorite = (payload) => {\r\n    return {\r\n        type: \"ADD_FAVORITE\",\r\n        payload\r\n    }\r\n}\r\nexport const removeFavorite = (payload) => {\r\n    return {\r\n        type: \"REMOVE_FAVORITE\",\r\n        payload\r\n    }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { DateInput } from './index';\r\nimport { getLaunches } from './actions';\r\n\r\n\r\nconst mapStateToProps = ({ dateReducer }) => ({\r\n    // startDate: dateReducer.startDate,\r\n    // endDate: dateReducer.endDate\r\n}\r\n)\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getLaunches: (start, end) => { dispatch(getLaunches(start, end)) }\r\n}\r\n)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DateInput);","import React from 'react';\r\nimport \"./styles.scss\";\r\n\r\nexport class Payload extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            clickBool: this.props.payloadBool || false\r\n        }\r\n    }\r\n    showPayloads = () =>{\r\n        this.setState({\r\n            clickBool: !this.state.clickBool\r\n        })\r\n    }\r\n    render() {\r\n        //console.log(this.state.payloads);\r\n        const payloadMap = this.props.payloads.map((payload, index) => {\r\n            return (<li key={\"payload \" + index}>\r\n                <dl className=\"payloadItem\">\r\n                    <dt className=\"payloadTitle\">ID:</dt>\r\n                     <dd className=\"payloadDesc\">{payload.payload_id}</dd>\r\n                    <dt className=\"payloadTitle\">Type:</dt> \r\n                    <dd className=\"payloadDesc\">{payload.payload_type}</dd>\r\n                    {payload.nationality !== undefined && \r\n                    <> <dt className=\"payloadTitle\">Nationality:</dt> \r\n                    <dd className=\"payloadDesc\">{payload.nationality}</dd></>}\r\n                </dl>\r\n            </li>\r\n            );\r\n        })\r\n        return (\r\n            <div className=\"payloadList\">\r\n                <h4 className=\"payloadHeader\">Payloads:</h4>\r\n                <button onClick={this.showPayloads} \r\n                className=\"payloadButton\">{this.state.clickBool===false ? \r\n                <>Show Payloads</>: <>Hide Payloads</>}</button>\r\n                <ol>\r\n                    {this.state.clickBool===true && payloadMap}\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport \"./styles.scss\";\r\n\r\nexport class LaunchImage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {//need to add derivedstatefromprops(nextProps, prevState)\r\n            showImages: this.props.imgBool || false\r\n        }\r\n    }\r\n    showImagesUpdate = () => {\r\n        this.setState({\r\n            showImages: !this.state.showImages\r\n        });\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <img src={this.props.links.mission_patch}\r\n                    alt=\"mission patch\"\r\n                    className=\"launchImg\"></img>\r\n                {this.props.links.flickr_images.length > 0 &&\r\n                    <button className=\"showImagesButton\"\r\n                        onClick={this.showImagesUpdate}>\r\n                        Show Images</button>}\r\n                \r\n                {this.state.showImages &&\r\n                    <div className=\"flickr\">\r\n                    {this.props.links.flickr_images.map((img, index) => {\r\n                        return <img src={img}\r\n                            alt={\"flickr \" + index}\r\n                            className=\"flickrImg\"\r\n                            key={\"flickr \" + index}></img>;\r\n                    })}\r\n                    </div>\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Payload } from './components/Payload';\r\nimport { LaunchImage } from './components/LaunchImage';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport { far } from '@fortawesome/free-regular-svg-icons'\r\nimport Moment from 'moment';\r\nimport \"./styles.scss\";\r\n\r\nexport class Launch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            descBool: false,\r\n            imgBool: false,\r\n            payloadBool: false\r\n        }\r\n    }\r\n    /*\r\n            links\r\n            mission_name\r\n            launch_date_utc\r\n            details\r\n            rocket.second_stage.payloads\r\n            flight_number\r\n    */\r\n\r\n    render() {\r\n        const data = this.props.data;\r\n        return (\r\n            <section className=\"launch\" >\r\n                <LaunchImage links={data.links} imgBool={this.state.imgBool} />\r\n                <h2 className=\"launchTitle\">{data.mission_name}</h2>\r\n                <button className=\"favoriteButton\"\r\n                    onClick={(e) => {//dispatch favorites actions here.\r\n                        if (!this.props.heart) {\r\n                            this.props.addFavorite(this.props.data);\r\n                        }\r\n                        else {\r\n                            this.props.removeFavorite(this.props.data);\r\n                        }\r\n                    }\r\n                    }>{this.props.heart === true ?\r\n                        <FontAwesomeIcon icon={faHeart} /> :\r\n                        <FontAwesomeIcon icon={far.faHeart} />}\r\n                </button>\r\n                <h2 className=\"launchDate\">{Moment(data.launch_date_utc).format('MMMM Do YYYY, h:mm:ss a')}</h2>\r\n                {data.details !== null &&\r\n                    <>\r\n                        <button className=\"descButton\" onClick={() => {\r\n                            this.setState({\r\n                                descBool: !this.state.descBool\r\n                            })\r\n                        }}>\r\n                            {this.state.descBool === false ? <>Show Description</> : <>Hide Description</>}\r\n                        </button>\r\n                        {this.state.descBool === true && <p className=\"launchDesc\">{data.details}</p>}\r\n                    </>\r\n\r\n                }\r\n\r\n                <Payload payloads={data.rocket.second_stage.payloads} payloadBool={this.state.payloadBool} />\r\n            </section>\r\n        );\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport { addFavorite, removeFavorite } from '../DateInput/actions';\r\nimport { Launch } from \"./index\";\r\n\r\nconst mapStateToProps = ({ dateReducer }) => ({\r\n    //favorites: dateReducer.favoritesData\r\n});\r\nconst mapDispatchProps = (dispatch) => ({\r\n    addFavorite: (fav) => { dispatch(addFavorite(fav)); },\r\n    removeFavorite: (fav) => { dispatch(removeFavorite(fav)); }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Launch);","import React from 'react';\r\nimport Launch from '../Launch/container';\r\nimport \"./styles.scss\";\r\n\r\nexport class Favorites extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            launches: []\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                {this.props.favorites.length > 0 &&\r\n                    <>\r\n                        <h3 className=\"favTitle\">Favorites:</h3>\r\n                        <div className=\"favorites\">\r\n                            {this.props.favorites.map((launch, index) => {\r\n                                return (<Launch\r\n                                    key={\"Launch\" + index}\r\n                                    index={index}\r\n                                    data={launch}\r\n                                    heart={this.props.favorites.includes(launch)}\r\n                                />)\r\n                            })}\r\n                        </div>\r\n                    </>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport {Favorites} from './index';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        favorites: state.dateReducer.favoritesData\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Favorites);","import React from 'react';\r\nimport Launch  from '../Launch/container';\r\nimport \"./styles.scss\";\r\n\r\nexport class Launches extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"launches\">\r\n                {this.props.launchesData !== undefined &&\r\n                    this.props.launchesData.map((launch, index) => {\r\n                        return (<Launch\r\n                            key={\"Launch\" + index}\r\n                            index={index}\r\n                            data={launch}\r\n                            heart={this.props.favorites.includes(launch)}\r\n                        />)\r\n                    }) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport { Launches } from './index';\r\n\r\nconst mapStateToProps = ({dateReducer}) => {\r\n    return { launchesData: dateReducer.launchesData,\r\n            isFetching: dateReducer.isFetching,\r\n            favorites: dateReducer.favoritesData }\r\n}\r\nexport default connect(mapStateToProps)(Launches);","import React from 'react';\r\nimport Moment from 'moment';\r\n//import { DateInput } from './components/DateInput';\r\nimport DateInput from './components/DateInput/container';\r\nimport Favorites from './components/Favorites/container';\r\nimport Launches from './components/Launches/container';\r\nimport './App.scss';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startDate: \"2002-05-06\",\r\n      endDate: Moment().format('YYYY-MM-DD'),\r\n      favorites: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"app\">\r\n        <header>\r\n          <link href=\"https://fonts.googleapis.com/css?family=Audiowide|Notable|Roboto|Saira+Stencil+One|Turret+Road&display=swap\" rel=\"stylesheet\" />\r\n          <h1 className=\"headerTitle\">Launches</h1>\r\n          <DateInput />\r\n        </header>\r\n        <main>\r\n          <Favorites />\r\n          <h3 className=\"searchTitle\">\r\n            {/* {\"SpaceX launches from \" +\r\n              this.state.startDate + \" to \" +\r\n              this.state.endDate} */}\r\n          </h3>\r\n          <Launches />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { rootReducer } from './components/rootReducer';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport thunk from 'redux-thunk';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    rootReducer, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunk), \r\n    ));\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}